# Environment Variables for Production Deployment
# Copy this file to .env.local for development or set these in Vercel for production

# =============================================================================
# DATABASE CONFIGURATION (REQUIRED)
# =============================================================================

# Primary PostgreSQL Database URL (Required for production)
DATABASE_URL=postgresql://username:password@host:port/database_name

# Individual Database Connection Parameters
DB_HOST=your-postgres-host.com
DB_PORT=5432
DB_NAME=edic_contest
DB_USER=your-database-username
DB_PASSWORD=your-secure-database-password

# Database Pool Configuration (Optional - uses defaults if not set)
DB_MAX_CONNECTIONS=20
DB_IDLE_TIMEOUT=30000

# =============================================================================
# AUTHENTICATION & SECURITY (REQUIRED)
# =============================================================================

# JWT Secret for Admin Authentication (MUST be secure in production)
JWT_SECRET=your-super-secure-jwt-secret-key-min-32-characters-long

# Session Configuration
JWT_EXPIRES_IN=7d
ADMIN_SESSION_DURATION=86400

# =============================================================================
# CONTEST CONFIGURATION (OPTIONAL)
# =============================================================================

# Contest Settings
CONTEST_NAME="EDIC Business Challenge"
CONTEST_DURATION=900
QUIZ_TIME_LIMIT=900
VOTING_TIME_LIMIT=30
PITCH_TIME_LIMIT=90

# Scoring Configuration
MAX_DOWNVOTES_PER_TEAM=3
QUIZ_MAX_SCORE=60
VOTING_WEIGHT=1.0

# =============================================================================
# SUPABASE CONFIGURATION (OPTIONAL - for additional features)
# =============================================================================

# Supabase Project Configuration (if using Supabase for additional features)
NEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=your-supabase-anon-key
SUPABASE_SERVICE_ROLE_KEY=your-supabase-service-role-key

# =============================================================================
# DEVELOPMENT SETTINGS (DEVELOPMENT ONLY)
# =============================================================================

# Next.js Development Settings
NODE_ENV=production
NEXT_PUBLIC_APP_URL=https://your-app.vercel.app

# Development Database (if different from production)
DEV_DATABASE_URL=postgresql://localhost:5432/edic_contest_dev

# =============================================================================
# MONITORING & LOGGING (OPTIONAL)
# =============================================================================

# Logging Configuration
LOG_LEVEL=info
ENABLE_ADMIN_LOGS=true
ENABLE_API_LOGGING=true

# Performance Monitoring
ENABLE_METRICS=true
METRICS_ENDPOINT=/api/metrics

# =============================================================================
# VERCEL SPECIFIC (FOR VERCEL DEPLOYMENT)
# =============================================================================

# Vercel Build Configuration
VERCEL=1
VERCEL_ENV=production

# =============================================================================
# INSTRUCTIONS FOR SETUP
# =============================================================================

# 1. For Development:
#    - Copy this file to .env.local
#    - Update the database credentials
#    - Set a secure JWT_SECRET
#    - Run: npm run dev

# 2. For Vercel Production:
#    - Set these variables in Vercel Dashboard → Settings → Environment Variables
#    - Or use Vercel CLI: vercel env add VARIABLE_NAME
#    - Make sure DATABASE_URL and JWT_SECRET are set correctly

# 3. For Database Setup:
#    - Create PostgreSQL database
#    - Run: psql -f database/optimized-schema.sql
#    - Verify with: npm run db:test (if script exists)

# =============================================================================
# SECURITY NOTES
# =============================================================================

# IMPORTANT SECURITY REQUIREMENTS:
# - JWT_SECRET must be at least 32 characters long and cryptographically secure
# - Database passwords should be strong and unique
# - Never commit this file with real credentials to version control
# - Use environment-specific values for each deployment
# - Rotate JWT_SECRET periodically in production
# - Use connection pooling for database efficiency
# - Enable SSL for database connections in production

# =============================================================================
# EXAMPLE VALUES (DO NOT USE IN PRODUCTION)
# =============================================================================

# Example DATABASE_URL formats:
# PostgreSQL: postgresql://user:password@localhost:5432/dbname
# PostgreSQL with SSL: postgresql://user:password@host:5432/dbname?sslmode=require
# Supabase: postgresql://postgres:[password]@db.[project].supabase.co:5432/postgres

# Example JWT_SECRET generation:
# Node.js: require('crypto').randomBytes(64).toString('hex')
# OpenSSL: openssl rand -hex 64
# Online: Use a secure random string generator (min 32 chars)
